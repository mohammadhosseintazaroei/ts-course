با استفاده از دستور نود و اسم فایل در تریمنال میتونیم فایل تایپ اسکریپت را اجرا کنیم ----> node runFirstTsAppFirstDay.ts

با اجرای دستور تی اس سی و اسم فایل در ترمینال میتوانیم از فایل تایپ اسکریپت خود بیلد بگیریم ---> tsc runFirstTsAppFirstDay.ts

نوع دیتای انی میتونه هر تایپی رو بگیره و متغیر رو به هر تایپ دیگه ای تغییر بده ---> dataTypesSecondDay.ts

وقتی خود برنامه تایپ اسکریپت تایپ متغیر هامونو بدون اینکه براش تعریف کنیم تشخیص میده میگیم اینفرنس تایپ ها 

وقتی میخوایم چند تایپ رو به یک متغیر، ورودی و یا یک خروجی اساین کنیم باید از یونیون تایپ ها استفاده کنیم ---> unionThirdDay.ts

با استفاده از انانیموس تایپ ها میایم و تایپ متغیر هارو از قبلم مشخص میکنیم  ---> anonymusThirdDay.ts

برای استفاده از ورودی های اپشنال کافیه یک علامت سوال بعد از ورودی قرار بدیم ---> optionalFieldsThirdDay.ts

توی تایپ آن ناون و انی میتونیم هر نوع دیتایی رو دریافت کنیم ---> specialTypesFourth.ts

آن ناون از لحاظ امنیتی بهتر هستش و مقادیرش به هیچ وجه در دیتا تایپ های دیگه به جز تایپ انی کپی نمیشن و نمیتونیم ازش تو دیتا تایپ دیگه ای به جز انی استفاده کنیم ---> specialTypesFourth.ts

برای هندل کردن ارور ها توی برنامه هامون و ثرو کردن و برگشت دادن ارور ها باید از تایپ نور استفاده کنیم نور یعنی هرگز قرار نیست کاری رو انجام بده بلکه فقط قراره یک خطایی رو تولید و مدیریت کنه ---> specialTypesFourth.ts

برای استفاده از متد های یک تایپ دیگه برای یک مقدار با تایپ متفاوت باید از کستینگ استفاده کنیم ---> castingFourthDay.ts

آپشنال تاپل های ما باید در اخر برنامه قرار بگیرند که برنامه به مشکل نخوره ---> tupleFifthDay.ts

برای تمیز کردن کدها و جلوگیری از تکرار یکسری موارد و کثیف شدن کد ها از اینام ها استفاده میکنیم

اسم اینام هارو اکثرا با حروف بزرگ مینویسند

قبلا از هاردکد ها استفاده میکردیم در کدهامون برای تایین یک سری وضعیت ها و از صفر و یک و اعداد زیاد استفاده میکردیم اما با وجود اینام ها دیگه از هاردکد ها استفاده نمیکنیم و وضعیت هامون رو داخل اینام مینویسیم ---> enumFifthDay.ts

داخل اینام ها فقط میتونیم از مقادیر استرینگ و عددی استفاده کنیم